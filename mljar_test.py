# -*- coding: utf-8 -*-
"""mljar test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AfIjI_8drgZbRjXIfdpMuLxKi4InhWq0

[20 autoML ](https://medium.com/datadriveninvestor/20-automl-libraries-for-the-data-scientists-e591068dbc6b)

[MLJAR](https://github.com/mljar/mljar-supervised)
"""

pip install mljar-supervised

import pandas as pd 
# scikit learn utilites
from sklearn.datasets import load_breast_cancer
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
# mljar-supervised package
from supervised.automl import AutoML

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('/content/drive/MyDrive/csvlist5.txt')
# basic data preparation
X = np.array(df.drop(['class'], 1)) #input
X = X.astype('float32')
y = np.array(df['class'])   #output
#y = y.astype('float64')
y = LabelEncoder().fit_transform(y.astype(str))
# Look at the dataset again
print(f'Number of Rows: {df.shape[0]}')
print(f'Number of Columns: {df.shape[1]}')
print(df.head())

# load the data
#digits = load_digits()
df=load_breast_cancer()
#X_train, X_test, y_train, y_test = train_test_split( X,y, stratify=y, test_size=0.2, random_state=123)
X_train, X_test, y_train, y_test = train_test_split(
    pd.DataFrame(df.data), df.target, stratify=df.target, test_size=0.25,
    random_state=123
)
# train models with AutoML
automl = AutoML(mode="Perform")
automl.fit(X_train, y_train)

# compute the accuracy on test data
predictions = automl.predict_all(X_test)
print(predictions.head())
print("Test accuracy:", accuracy_score(y_test, predictions["label"].astype(int)))