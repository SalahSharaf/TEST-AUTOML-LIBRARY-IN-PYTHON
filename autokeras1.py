# -*- coding: utf-8 -*-
"""autokeras1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10YLP_PtB248CZKqoyPMhGkTb8cFt97CD

References:
1.   [Autokeras tutorial](https://machinelearningmastery.com/autokeras-for-classification-and-regression/)
2.   [autokeras website](https://autokeras.com/)

3. [model visualization](https://machinelearningmastery.com/visualize-deep-learning-neural-network-model-keras/)

4. [graphviz website](https://pypi.org/project/graphviz/)

*   pip install sklearn
*   pip install autokeras
*   pip install graphviz
"""

pip install autokeras

pip install sklearn

pip install graphviz

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
#from numpy import asarray
import pandas as pd #import pandas
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from autokeras import StructuredDataClassifier

df = pd.read_csv('/content/drive/MyDrive/breast-cancer-wisconsin.data.txt')
# basic data preparation
X = np.array(df.drop(['class'], 1)) #input
#X = X.astype('float32')
y = np.array(df['class'])   #output
# integer encode
y = LabelEncoder().fit_transform(y)
# Look at the dataset again
print(f'Number of Rows: {df.shape[0]}')
print(f'Number of Columns: {df.shape[1]}')
print(df.head())

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
search = StructuredDataClassifier(max_trials=5)
search.fit(x=X_train, y=y_train, verbose=1)
loss, acc = search.evaluate(X_test, y_test, verbose=0) #classification
print('Accuracy: %.3f' % acc)
print('loss: %.3f' % loss)
y_predictions = search.predict(X_test)
model = search.export_model()
model.summary()
print("\n%s: %.2f%%" % (model.metrics_names[1], acc*100))
model.save('breast_cancer_model.tf')

from keras.utils.vis_utils import plot_model
plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)