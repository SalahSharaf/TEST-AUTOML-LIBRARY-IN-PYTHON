# -*- coding: utf-8 -*-
"""MLP randomsearch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17p00ooV2yjJxVRDS57uJnuOk12l5J-Xi
"""

import numpy as np
import pandas as pd #import pandas
from sklearn.preprocessing import LabelEncoder
from scipy.stats import loguniform
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import RepeatedStratifiedKFold
from sklearn.model_selection import RandomizedSearchCV
from sklearn.model_selection import GridSearchCV

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('/content/drive/MyDrive/breast-cancer-wisconsin.data.txt')
df.replace('?',-99999, inplace=True)
df.drop(['id'], 1, inplace=True)
X = np.array(df.drop(['class'], 1))
X = X.astype('float32')
y = np.array(df['class'])
y = LabelEncoder().fit_transform(y.astype(str))
# Look at the dataset again
print(X.shape, y.shape)
print(df.head())

# define model
model = MLPClassifier(verbose=True)
# define evaluation
cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)
# define search space
space = dict()
space['hidden_layer_sizes']=[100,500,1000,1500,2000]
#space['solver'] = ['adam', 'lbfgs', 'sgd']
#space['activation'] = ['identity','logistic','tanh','relu']
#space['learning_rate'] = ['constant', 'invscaling', 'adaptive']
#space['max_iter']=[500,800,1000,1500,2000,2500,3000]
#space['alpha']=[0.0001,0.001,0.00001]
# define search
search = RandomizedSearchCV(model, space, n_iter=500, scoring='accuracy', n_jobs=-1, cv=cv, random_state=1)
# execute search
result = search.fit(X, y)
# summarize result
print('Best Score: %s' % result.best_score_)
print('Best Hyperparameters: %s' % result.best_params_)